<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${tdo.Package}.data.${tdo.Name}Repository">
#foreach($column in $tdo.ModelObject.Columns.Values)
	#if($column.IsAutoIncremented) 
		#set($keyColumn = $column)
	#end
#end
  <!-- CodeBuilder  Generated-->
  <resultMap id="${tdo.Name}Map" type="${tdo.Package}.domain.${tdo.Name}">
  	#foreach($column in $tdo.ModelObject.Columns.Values)
		#if($column.IsAutoIncremented) 
		 <id column="${column.OriginalName}" property="${column.LowerCamelName}" jdbcType="${column.LanguageType}" />
		#else
		<result column="${column.OriginalName}" property="${column.LowerCamelName}" jdbcType="${column.LanguageType}" />
		#end
	#end
  </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
	<sql id="Base_Column_List_Without_Id">
  	#set($index = 1)
  	#set($count = $tdo.ModelObject.Columns.Values.Count)
  	#foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented) 
			${column.OriginalName} #if($index < $count),#end
		#end
		#set($index = $index+1)
	#end
  </sql>
  <sql id="Base_Column_List">
  	#foreach($column in $tdo.ModelObject.Columns.Values)
  		#if($column.IsAutoIncremented) 
			${column.OriginalName} ,<include refid="Base_Column_List_Without_Id"/>
		#end
	#end
  </sql>
    <sql id="Insert_Columns">
     #foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented) 
		<if test="${column.LowerCamelName} != null">${column.OriginalName},</if>
		#end
	#end
    </sql>
    <sql id="Insert_Values">
    #foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented)
		<if test="${column.LowerCamelName} != null">#{${column.LowerCamelName},jdbcType=${column.LanguageType}},</if>
		#end
	#end
    </sql>
    <sql id="Batch_Insert_Values">
	#foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented)
		 #{item.${column.LowerCamelName},jdbcType=${column.LanguageType}},
		 #end
	#end
    </sql>
    <sql id="Update_Set_From_Bean">
	 #foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented)
		<if test="${column.LowerCamelName} != null">${column.OriginalName} = #{${column.LowerCamelName},jdbcType=${column.LanguageType}} ,</if>
		#end
	#end
    </sql>
    <sql id="Update_Set_From_Map">
	#foreach($column in $tdo.ModelObject.Columns.Values)
		#if(!$column.IsAutoIncremented)
		<if test="record.${column.LowerCamelName} != null">${column.OriginalName} = #{record.${column.LowerCamelName},jdbcType=${column.LanguageType}} ,</if>
		#end
	#end
    </sql>
    <sql id="BatchUpdate_Set_From_Bean">
		#foreach($column in $tdo.ModelObject.Columns.Values)
			#if(!$column.IsAutoIncremented)
			<if test="item.${column.LowerCamelName} != null">${column.OriginalName} = #{item.${column.LowerCamelName},jdbcType=${column.LanguageType}} ,</if>
			#end
		#end
    </sql>
	<!-- insert -->
	<insert id="insert" parameterType="${tdo.Package}.domain.${tdo.Name}">
        <selectKey resultType="${keyColumn.LanguageTypeAlias}" keyProperty="${keyColumn.OriginalName}" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ${tdo.ModelObject.OriginalName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into ${tdo.ModelObject.OriginalName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
	<!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="${keyColumn.LanguageTypeAlias}">
        delete from ${tdo.ModelObject.OriginalName} where ${keyColumn.OriginalName} = #{id,jdbcType=${keyColumn.LanguageType}}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from ${tdo.ModelObject.OriginalName}
        <if test="example!= null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn">
        delete from ${tdo.ModelObject.OriginalName} where ${keyColumn.OriginalName} in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=${keyColumn.LanguageType}}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
	<update id="updateById" parameterType="${tdo.Package}.domain.${tdo.Name}">
        update ${tdo.ModelObject.OriginalName}
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where ${keyColumn.OriginalName} = #{id,jdbcType=${keyColumn.LanguageType}}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update ${tdo.ModelObject.OriginalName}
        <set>
            <include refid="Update_Set_From_Map"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ${tdo.ModelObject.OriginalName}
            <set>
            	<include refid="BatchUpdate_Set_From_Bean"/>
            </set>
            where ${keyColumn.OriginalName}=#{item.id,jdbcType=${keyColumn.LanguageType}}
        </foreach>
    </update>
	 <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="${tdo.Name}Map" parameterType="${keyColumn.LanguageTypeAlias}">
        select
        <include refid="Base_Column_List"/>
        from ${tdo.ModelObject.OriginalName}
        where ${keyColumn.OriginalName} = #{id,jdbcType=${keyColumn.LanguageType}}
    </select>
    <select id="selectByExample" resultMap="${tdo.Name}Map" parameterType="java.util.Map">
	   select
        <if test="example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ${tdo.ModelObject.OriginalName}
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="${tdo.Name}Map" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ${tdo.ModelObject.OriginalName}
		<if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="${tdo.Name}Map" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from ${tdo.ModelObject.OriginalName}
        where ${keyColumn.OriginalName} IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=${keyColumn.LanguageType}}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from ${tdo.ModelObject.OriginalName}
       <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from ${tdo.ModelObject.OriginalName}
		<if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="${tdo.Name}Map" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ${tdo.ModelObject.OriginalName}
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
	 <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>
